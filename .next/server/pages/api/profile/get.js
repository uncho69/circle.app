"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/profile/get";
exports.ids = ["pages/api/profile/get"];
exports.modules = {

/***/ "better-sqlite3":
/*!*********************************!*\
  !*** external "better-sqlite3" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("better-sqlite3");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fprofile%2Fget&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fprofile%2Fget.ts&middlewareConfigBase64=e30%3D!":
/*!********************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fprofile%2Fget&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fprofile%2Fget.ts&middlewareConfigBase64=e30%3D! ***!
  \********************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_profile_get_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/profile/get.ts */ \"(api)/./pages/api/profile/get.ts\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_profile_get_ts__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_profile_get_ts__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/profile/get\",\n        pathname: \"/api/profile/get\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_profile_get_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRnByb2ZpbGUlMkZnZXQmcHJlZmVycmVkUmVnaW9uPSZhYnNvbHV0ZVBhZ2VQYXRoPS4lMkZwYWdlcyUyRmFwaSUyRnByb2ZpbGUlMkZnZXQudHMmbWlkZGxld2FyZUNvbmZpZ0Jhc2U2ND1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ0w7QUFDMUQ7QUFDdUQ7QUFDdkQ7QUFDQSxpRUFBZSx3RUFBSyxDQUFDLHNEQUFRLFlBQVksRUFBQztBQUMxQztBQUNPLGVBQWUsd0VBQUssQ0FBQyxzREFBUTtBQUNwQztBQUNPLHdCQUF3QixnSEFBbUI7QUFDbEQ7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsWUFBWTtBQUNaLENBQUM7O0FBRUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaXJjbGUtYXBwLz9hMzQ3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhZ2VzQVBJUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9wYWdlcy1hcGkvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgaG9pc3QgfSBmcm9tIFwibmV4dC9kaXN0L2J1aWxkL3RlbXBsYXRlcy9oZWxwZXJzXCI7XG4vLyBJbXBvcnQgdGhlIHVzZXJsYW5kIGNvZGUuXG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiLi9wYWdlcy9hcGkvcHJvZmlsZS9nZXQudHNcIjtcbi8vIFJlLWV4cG9ydCB0aGUgaGFuZGxlciAoc2hvdWxkIGJlIHRoZSBkZWZhdWx0IGV4cG9ydCkuXG5leHBvcnQgZGVmYXVsdCBob2lzdCh1c2VybGFuZCwgXCJkZWZhdWx0XCIpO1xuLy8gUmUtZXhwb3J0IGNvbmZpZy5cbmV4cG9ydCBjb25zdCBjb25maWcgPSBob2lzdCh1c2VybGFuZCwgXCJjb25maWdcIik7XG4vLyBDcmVhdGUgYW5kIGV4cG9ydCB0aGUgcm91dGUgbW9kdWxlIHRoYXQgd2lsbCBiZSBjb25zdW1lZC5cbmV4cG9ydCBjb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBQYWdlc0FQSVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5QQUdFU19BUEksXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9wcm9maWxlL2dldFwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL3Byb2ZpbGUvZ2V0XCIsXG4gICAgICAgIC8vIFRoZSBmb2xsb3dpbmcgYXJlbid0IHVzZWQgaW4gcHJvZHVjdGlvbi5cbiAgICAgICAgYnVuZGxlUGF0aDogXCJcIixcbiAgICAgICAgZmlsZW5hbWU6IFwiXCJcbiAgICB9LFxuICAgIHVzZXJsYW5kXG59KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFnZXMtYXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fprofile%2Fget&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fprofile%2Fget.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./pages/api/follow/action.ts":
/*!************************************!*\
  !*** ./pages/api/follow/action.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler),\n/* harmony export */   followRelationships: () => (/* binding */ followRelationships),\n/* harmony export */   getFollowStats: () => (/* binding */ getFollowStats),\n/* harmony export */   isFollowing: () => (/* binding */ isFollowing)\n/* harmony export */ });\n// Simple in-memory storage for demo\nlet followRelationships = [];\nasync function handler(req, res) {\n    if (req.method !== \"POST\") {\n        return res.status(405).json({\n            error: \"Method not allowed\"\n        });\n    }\n    try {\n        const { follower, following, action } = req.body;\n        // Validation\n        if (!follower || !following || !action) {\n            return res.status(400).json({\n                error: \"Follower, following, and action are required\"\n            });\n        }\n        if (follower === following) {\n            return res.status(400).json({\n                error: \"Cannot follow yourself\"\n            });\n        }\n        if (![\n            \"follow\",\n            \"unfollow\"\n        ].includes(action)) {\n            return res.status(400).json({\n                error: \"Action must be follow or unfollow\"\n            });\n        }\n        // Check if relationship already exists\n        const existingRelationship = followRelationships.find((rel)=>rel.follower === follower && rel.following === following);\n        if (action === \"follow\") {\n            if (existingRelationship) {\n                return res.status(400).json({\n                    error: \"Already following this user\"\n                });\n            }\n            // Create new follow relationship\n            const newRelationship = {\n                follower,\n                following,\n                followedAt: new Date().toISOString()\n            };\n            followRelationships.push(newRelationship);\n            console.log(`👥 ${follower} started following ${following}`);\n            return res.status(200).json({\n                success: true,\n                action: \"followed\",\n                relationship: newRelationship,\n                message: `Now following ${following}`\n            });\n        } else if (action === \"unfollow\") {\n            if (!existingRelationship) {\n                return res.status(400).json({\n                    error: \"Not following this user\"\n                });\n            }\n            // Remove follow relationship\n            followRelationships = followRelationships.filter((rel)=>!(rel.follower === follower && rel.following === following));\n            console.log(`👥 ${follower} unfollowed ${following}`);\n            return res.status(200).json({\n                success: true,\n                action: \"unfollowed\",\n                message: `Unfollowed ${following}`\n            });\n        }\n    } catch (error) {\n        console.error(\"Follow action error:\", error);\n        return res.status(500).json({\n            success: false,\n            error: \"Failed to process follow action\",\n            message: error instanceof Error ? error.message : \"Unknown error\"\n        });\n    }\n}\n// Helper functions to get follow stats\nfunction getFollowStats(pseudonym) {\n    const followers = followRelationships.filter((rel)=>rel.following === pseudonym).map((rel)=>rel.follower);\n    const following = followRelationships.filter((rel)=>rel.follower === pseudonym).map((rel)=>rel.following);\n    return {\n        followersCount: followers.length,\n        followingCount: following.length,\n        followers,\n        following\n    };\n}\nfunction isFollowing(follower, following) {\n    return followRelationships.some((rel)=>rel.follower === follower && rel.following === following);\n}\n// Export relationships for access from other endpoints\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/follow/action.ts\n");

/***/ }),

/***/ "(api)/./pages/api/profile/get.ts":
/*!**********************************!*\
  !*** ./pages/api/profile/get.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _utils_database__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/database */ \"(api)/./utils/database.ts\");\n/* harmony import */ var _follow_action__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../follow/action */ \"(api)/./pages/api/follow/action.ts\");\n\n\nasync function handler(req, res) {\n    if (req.method !== \"GET\") {\n        return res.status(405).json({\n            error: \"Method not allowed\"\n        });\n    }\n    // Initialize database\n    (0,_utils_database__WEBPACK_IMPORTED_MODULE_0__.initDatabase)();\n    try {\n        const { pseudonym, walletAddress } = req.query;\n        let profile = null;\n        // Get profile by pseudonym or wallet address\n        if (pseudonym) {\n            profile = (0,_utils_database__WEBPACK_IMPORTED_MODULE_0__.getUserByPseudonym)(pseudonym);\n        } else if (walletAddress) {\n            profile = (0,_utils_database__WEBPACK_IMPORTED_MODULE_0__.getUserByWallet)(walletAddress);\n        } else {\n            return res.status(400).json({\n                error: \"Pseudonym or wallet address required\"\n            });\n        }\n        if (!profile) {\n            return res.status(404).json({\n                error: \"Profile not found\"\n            });\n        }\n        // Calculate profile statistics\n        const allPosts = (0,_utils_database__WEBPACK_IMPORTED_MODULE_0__.getPosts)();\n        const userPosts = allPosts.filter((post)=>post.author === profile.pseudonym);\n        const followStats = (0,_follow_action__WEBPACK_IMPORTED_MODULE_1__.getFollowStats)(profile.pseudonym);\n        const stats = {\n            postsCount: userPosts.length,\n            followersCount: followStats.followersCount,\n            followingCount: followStats.followingCount,\n            likesReceived: userPosts.reduce((sum, post)=>sum + (post.likes || 0), 0),\n            repostsReceived: userPosts.reduce((sum, post)=>sum + (post.reposts || 0), 0)\n        };\n        // Format posts for frontend\n        const formattedPosts = userPosts.map((post)=>({\n                id: post.id.toString(),\n                author: post.author,\n                content: post.content,\n                image: post.image,\n                likes: post.likes || 0,\n                reposts: post.reposts || 0,\n                replies: post.replies || 0,\n                views: 0,\n                timestamp: post.created_at,\n                visibility: post.visibility || \"public\",\n                replyTo: post.reply_to_id ? post.reply_to_id.toString() : null\n            }));\n        // Parse social links from JSON string\n        const socialLinks = profile.social_links ? JSON.parse(profile.social_links) : {};\n        // Create public profile (remove sensitive data)\n        const publicProfile = {\n            pseudonym: profile.pseudonym,\n            displayName: profile.display_name || profile.pseudonym,\n            bio: profile.bio || \"\",\n            location: profile.location || \"\",\n            website: profile.website || \"\",\n            avatar: profile.avatar || generateDefaultAvatar(profile.pseudonym),\n            bannerColor: profile.banner_color || generateRandomColor(),\n            socialLinks,\n            createdAt: profile.created_at,\n            reputation: profile.reputation || 0,\n            stats,\n            zkProofs: 0,\n            walletAddressDisplay: `${profile.wallet_address.substring(0, 8)}...${profile.wallet_address.substring(profile.wallet_address.length - 4)}`\n        };\n        return res.status(200).json({\n            success: true,\n            profile: publicProfile,\n            posts: formattedPosts,\n            message: \"Profile retrieved successfully\"\n        });\n    } catch (error) {\n        console.error(\"Profile retrieval error:\", error);\n        return res.status(500).json({\n            success: false,\n            error: \"Failed to retrieve profile\",\n            message: error instanceof Error ? error.message : \"Unknown error\"\n        });\n    }\n}\n// Helper functions (same as in update.ts)\nfunction generateDefaultAvatar(pseudonym) {\n    const colors = [\n        \"from-red-400 to-pink-400\",\n        \"from-blue-400 to-cyan-400\",\n        \"from-green-400 to-emerald-400\",\n        \"from-purple-400 to-violet-400\",\n        \"from-yellow-400 to-orange-400\",\n        \"from-indigo-400 to-blue-400\"\n    ];\n    const hash = pseudonym.split(\"\").reduce((a, b)=>{\n        a = (a << 5) - a + b.charCodeAt(0);\n        return a & a;\n    }, 0);\n    const colorIndex = Math.abs(hash) % colors.length;\n    return `gradient-${colorIndex}`;\n}\nfunction generateRandomColor() {\n    const colors = [\n        \"#FF6B6B\",\n        \"#4ECDC4\",\n        \"#45B7D1\",\n        \"#96CEB4\",\n        \"#FFEAA7\",\n        \"#DDA0DD\",\n        \"#98D8C8\",\n        \"#F7DC6F\",\n        \"#BB8FCE\",\n        \"#85C1E9\"\n    ];\n    return colors[Math.floor(Math.random() * colors.length)];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/profile/get.ts\n");

/***/ }),

/***/ "(api)/./utils/database.ts":
/*!***************************!*\
  !*** ./utils/database.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addInteraction: () => (/* binding */ addInteraction),\n/* harmony export */   closeDatabase: () => (/* binding */ closeDatabase),\n/* harmony export */   createPost: () => (/* binding */ createPost),\n/* harmony export */   createUser: () => (/* binding */ createUser),\n/* harmony export */   deleteUserPosts: () => (/* binding */ deleteUserPosts),\n/* harmony export */   followUser: () => (/* binding */ followUser),\n/* harmony export */   getDatabase: () => (/* binding */ getDatabase),\n/* harmony export */   getPostById: () => (/* binding */ getPostById),\n/* harmony export */   getPosts: () => (/* binding */ getPosts),\n/* harmony export */   getUserByPseudonym: () => (/* binding */ getUserByPseudonym),\n/* harmony export */   getUserByWallet: () => (/* binding */ getUserByWallet),\n/* harmony export */   hasInteraction: () => (/* binding */ hasInteraction),\n/* harmony export */   initDatabase: () => (/* binding */ initDatabase),\n/* harmony export */   isFollowing: () => (/* binding */ isFollowing),\n/* harmony export */   removeInteraction: () => (/* binding */ removeInteraction),\n/* harmony export */   unfollowUser: () => (/* binding */ unfollowUser),\n/* harmony export */   updatePostStats: () => (/* binding */ updatePostStats),\n/* harmony export */   updateUser: () => (/* binding */ updateUser)\n/* harmony export */ });\n/* harmony import */ var better_sqlite3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! better-sqlite3 */ \"better-sqlite3\");\n/* harmony import */ var better_sqlite3__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(better_sqlite3__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);\n\n\n// Database file path\nconst dbPath = path__WEBPACK_IMPORTED_MODULE_1___default().join(process.cwd(), \"data\", \"decentra.db\");\n// Initialize database\nlet db;\nconst initDatabase = ()=>{\n    try {\n        // Ensure data directory exists\n        const fs = __webpack_require__(/*! fs */ \"fs\");\n        const dataDir = path__WEBPACK_IMPORTED_MODULE_1___default().dirname(dbPath);\n        if (!fs.existsSync(dataDir)) {\n            fs.mkdirSync(dataDir, {\n                recursive: true\n            });\n        }\n        // Open database\n        db = new (better_sqlite3__WEBPACK_IMPORTED_MODULE_0___default())(dbPath);\n        // Enable foreign keys\n        db.pragma(\"foreign_keys = ON\");\n        // Create tables\n        createTables();\n        console.log(\"✅ Database initialized successfully\");\n        return db;\n    } catch (error) {\n        console.error(\"❌ Database initialization failed:\", error);\n        throw error;\n    }\n};\nconst createTables = ()=>{\n    // Users table\n    db.exec(`\n    CREATE TABLE IF NOT EXISTS users (\n      id INTEGER PRIMARY KEY AUTOINCREMENT,\n      wallet_address TEXT UNIQUE NOT NULL,\n      pseudonym TEXT UNIQUE NOT NULL,\n      display_name TEXT,\n      bio TEXT,\n      location TEXT,\n      website TEXT,\n      avatar TEXT,\n      banner_color TEXT DEFAULT '#1a1a1a',\n      social_links TEXT DEFAULT '{}',\n      reputation INTEGER DEFAULT 0,\n      created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n      last_login DATETIME DEFAULT CURRENT_TIMESTAMP,\n      updated_at DATETIME DEFAULT CURRENT_TIMESTAMP\n    )\n  `);\n    // Posts table\n    db.exec(`\n    CREATE TABLE IF NOT EXISTS posts (\n      id INTEGER PRIMARY KEY AUTOINCREMENT,\n      author_id INTEGER NOT NULL,\n      content TEXT NOT NULL,\n      image TEXT,\n      visibility TEXT DEFAULT 'public',\n      likes INTEGER DEFAULT 0,\n      reposts INTEGER DEFAULT 0,\n      replies INTEGER DEFAULT 0,\n      reply_to_id INTEGER,\n      created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n      updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n      FOREIGN KEY (author_id) REFERENCES users (id) ON DELETE CASCADE,\n      FOREIGN KEY (reply_to_id) REFERENCES posts (id) ON DELETE CASCADE\n    )\n  `);\n    // Interactions table (likes, reposts)\n    db.exec(`\n    CREATE TABLE IF NOT EXISTS interactions (\n      id INTEGER PRIMARY KEY AUTOINCREMENT,\n      user_id INTEGER NOT NULL,\n      post_id INTEGER NOT NULL,\n      type TEXT NOT NULL CHECK (type IN ('like', 'repost')),\n      created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n      FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE,\n      FOREIGN KEY (post_id) REFERENCES posts (id) ON DELETE CASCADE,\n      UNIQUE(user_id, post_id, type)\n    )\n  `);\n    // Follows table\n    db.exec(`\n    CREATE TABLE IF NOT EXISTS follows (\n      id INTEGER PRIMARY KEY AUTOINCREMENT,\n      follower_id INTEGER NOT NULL,\n      following_id INTEGER NOT NULL,\n      created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n      FOREIGN KEY (follower_id) REFERENCES users (id) ON DELETE CASCADE,\n      FOREIGN KEY (following_id) REFERENCES users (id) ON DELETE CASCADE,\n      UNIQUE(follower_id, following_id)\n    )\n  `);\n    // Notifications table\n    db.exec(`\n    CREATE TABLE IF NOT EXISTS notifications (\n      id INTEGER PRIMARY KEY AUTOINCREMENT,\n      user_id INTEGER NOT NULL,\n      from_user_id INTEGER,\n      post_id INTEGER,\n      type TEXT NOT NULL CHECK (type IN ('like', 'repost', 'reply', 'follow')),\n      content TEXT,\n      read BOOLEAN DEFAULT FALSE,\n      created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n      FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE,\n      FOREIGN KEY (from_user_id) REFERENCES users (id) ON DELETE CASCADE,\n      FOREIGN KEY (post_id) REFERENCES posts (id) ON DELETE CASCADE\n    )\n  `);\n    // ZK Proofs table\n    db.exec(`\n    CREATE TABLE IF NOT EXISTS zk_proofs (\n      id INTEGER PRIMARY KEY AUTOINCREMENT,\n      user_id INTEGER NOT NULL,\n      proof_type TEXT NOT NULL,\n      proof_data TEXT NOT NULL,\n      verified BOOLEAN DEFAULT FALSE,\n      created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n      FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE\n    )\n  `);\n    console.log(\"✅ Database tables created successfully\");\n};\n// Database operations\nconst getDatabase = ()=>{\n    if (!db) {\n        throw new Error(\"Database not initialized. Call initDatabase() first.\");\n    }\n    return db;\n};\n// User operations\nconst createUser = (userData)=>{\n    const db = getDatabase();\n    const stmt = db.prepare(`\n    INSERT INTO users (\n      wallet_address, pseudonym, display_name, bio, location, website, \n      avatar, banner_color, social_links, reputation, created_at, last_login\n    )\n    VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\n  `);\n    const result = stmt.run(userData.walletAddress.toLowerCase(), userData.pseudonym, userData.displayName || userData.pseudonym, userData.bio || \"\", userData.location || \"\", userData.website || \"\", userData.avatar || \"\", userData.bannerColor || \"#1DA1F2\", JSON.stringify(userData.socialLinks || {}), userData.reputation || 0, userData.createdAt || new Date().toISOString(), userData.lastLogin || new Date().toISOString());\n    return result.lastInsertRowid;\n};\nconst getUserByWallet = (walletAddress)=>{\n    const db = getDatabase();\n    const normalizedAddress = walletAddress.toLowerCase();\n    console.log(\"\\uD83D\\uDD0D Looking up user by wallet:\", normalizedAddress);\n    const stmt = db.prepare(\"SELECT * FROM users WHERE wallet_address = ?\");\n    const user = stmt.get(normalizedAddress);\n    console.log(\"Found user:\", user);\n    return user;\n};\nconst getUserByPseudonym = (pseudonym)=>{\n    const db = getDatabase();\n    const stmt = db.prepare(\"SELECT * FROM users WHERE pseudonym = ?\");\n    return stmt.get(pseudonym);\n};\nconst updateUser = (walletAddress, updates)=>{\n    const db = getDatabase();\n    const fields = Object.keys(updates).map((key)=>`${key} = ?`).join(\", \");\n    const values = Object.values(updates);\n    const stmt = db.prepare(`\n    UPDATE users \n    SET ${fields}, updated_at = CURRENT_TIMESTAMP\n    WHERE wallet_address = ?\n  `);\n    return stmt.run(...values, walletAddress.toLowerCase());\n};\n// Post operations\nconst createPost = (postData)=>{\n    const db = getDatabase();\n    const now = new Date().toISOString();\n    console.log(\"Creating post with timestamp:\", now);\n    const stmt = db.prepare(`\n    INSERT INTO posts (author_id, content, image, visibility, reply_to_id, created_at)\n    VALUES (?, ?, ?, ?, ?, ?)\n  `);\n    const result = stmt.run(postData.authorId, postData.content, postData.image || null, postData.visibility || \"public\", postData.replyToId || null, now);\n    return result.lastInsertRowid;\n};\nconst getPosts = (limit = 20, offset = 0, userId)=>{\n    const db = getDatabase();\n    let query = `\n    SELECT \n      p.*,\n      u.pseudonym as author,\n      u.display_name as author_display_name,\n      u.avatar as author_avatar\n    FROM posts p\n    JOIN users u ON p.author_id = u.id\n    WHERE p.reply_to_id IS NULL\n  `;\n    if (userId) {\n        query += ` AND (p.visibility = 'public' OR p.author_id = ? OR p.author_id IN (\n      SELECT following_id FROM follows WHERE follower_id = ?\n    ))`;\n    } else {\n        query += ` AND p.visibility = 'public'`;\n    }\n    query += ` ORDER BY p.created_at DESC LIMIT ? OFFSET ?`;\n    const stmt = db.prepare(query);\n    const params = userId ? [\n        userId,\n        userId,\n        limit,\n        offset\n    ] : [\n        limit,\n        offset\n    ];\n    return stmt.all(...params);\n};\nconst getPostById = (postId)=>{\n    const db = getDatabase();\n    const stmt = db.prepare(`\n    SELECT \n      p.*,\n      u.pseudonym as author,\n      u.display_name as author_display_name,\n      u.avatar as author_avatar\n    FROM posts p\n    JOIN users u ON p.author_id = u.id\n    WHERE p.id = ?\n  `);\n    return stmt.get(postId);\n};\nconst updatePostStats = (postId)=>{\n    const db = getDatabase();\n    // Update likes count\n    db.prepare(`\n    UPDATE posts \n    SET likes = (SELECT COUNT(*) FROM interactions WHERE post_id = ? AND type = 'like')\n    WHERE id = ?\n  `).run(postId, postId);\n    // Update reposts count\n    db.prepare(`\n    UPDATE posts \n    SET reposts = (SELECT COUNT(*) FROM interactions WHERE post_id = ? AND type = 'repost')\n    WHERE id = ?\n  `).run(postId, postId);\n    // Update replies count\n    db.prepare(`\n    UPDATE posts \n    SET replies = (SELECT COUNT(*) FROM posts WHERE reply_to_id = ?)\n    WHERE id = ?\n  `).run(postId, postId);\n};\n// Interaction operations\nconst addInteraction = (userId, postId, type)=>{\n    const db = getDatabase();\n    const stmt = db.prepare(`\n    INSERT OR IGNORE INTO interactions (user_id, post_id, type)\n    VALUES (?, ?, ?)\n  `);\n    const result = stmt.run(userId, postId, type);\n    if (result.changes > 0) {\n        updatePostStats(postId);\n        return true;\n    }\n    return false;\n};\nconst removeInteraction = (userId, postId, type)=>{\n    const db = getDatabase();\n    const stmt = db.prepare(`\n    DELETE FROM interactions \n    WHERE user_id = ? AND post_id = ? AND type = ?\n  `);\n    const result = stmt.run(userId, postId, type);\n    if (result.changes > 0) {\n        updatePostStats(postId);\n        return true;\n    }\n    return false;\n};\nconst hasInteraction = (userId, postId, type)=>{\n    const db = getDatabase();\n    const stmt = db.prepare(`\n    SELECT COUNT(*) as count \n    FROM interactions \n    WHERE user_id = ? AND post_id = ? AND type = ?\n  `);\n    const result = stmt.get(userId, postId, type);\n    return result.count > 0;\n};\n// Follow operations\nconst followUser = (followerId, followingId)=>{\n    const db = getDatabase();\n    const stmt = db.prepare(`\n    INSERT OR IGNORE INTO follows (follower_id, following_id)\n    VALUES (?, ?)\n  `);\n    return stmt.run(followerId, followingId).changes > 0;\n};\nconst unfollowUser = (followerId, followingId)=>{\n    const db = getDatabase();\n    const stmt = db.prepare(`\n    DELETE FROM follows \n    WHERE follower_id = ? AND following_id = ?\n  `);\n    return stmt.run(followerId, followingId).changes > 0;\n};\nconst isFollowing = (followerId, followingId)=>{\n    const db = getDatabase();\n    const stmt = db.prepare(`\n    SELECT COUNT(*) as count \n    FROM follows \n    WHERE follower_id = ? AND following_id = ?\n  `);\n    const result = stmt.get(followerId, followingId);\n    return result.count > 0;\n};\n// Delete all posts by a user\nconst deleteUserPosts = (pseudonym)=>{\n    const db = getDatabase();\n    // First get the user ID\n    const user = getUserByPseudonym(pseudonym);\n    if (!user || !user.id) {\n        return 0;\n    }\n    // Delete all posts by this user\n    const stmt = db.prepare(`\n    DELETE FROM posts \n    WHERE author_id = ?\n  `);\n    const result = stmt.run(user.id);\n    return result.changes;\n};\n// Close database\nconst closeDatabase = ()=>{\n    if (db) {\n        db.close();\n        console.log(\"✅ Database closed successfully\");\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./utils/database.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fprofile%2Fget&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fprofile%2Fget.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();