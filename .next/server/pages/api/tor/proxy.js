"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/tor/proxy";
exports.ids = ["pages/api/tor/proxy"];
exports.modules = {

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "node-fetch":
/*!*****************************!*\
  !*** external "node-fetch" ***!
  \*****************************/
/***/ ((module) => {

module.exports = require("node-fetch");

/***/ }),

/***/ "socks-proxy-agent":
/*!************************************!*\
  !*** external "socks-proxy-agent" ***!
  \************************************/
/***/ ((module) => {

module.exports = require("socks-proxy-agent");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Ftor%2Fproxy&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Ftor%2Fproxy.ts&middlewareConfigBase64=e30%3D!":
/*!****************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Ftor%2Fproxy&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Ftor%2Fproxy.ts&middlewareConfigBase64=e30%3D! ***!
  \****************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_tor_proxy_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/tor/proxy.ts */ \"(api)/./pages/api/tor/proxy.ts\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_tor_proxy_ts__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_tor_proxy_ts__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/tor/proxy\",\n        pathname: \"/api/tor/proxy\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_tor_proxy_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRnRvciUyRnByb3h5JnByZWZlcnJlZFJlZ2lvbj0mYWJzb2x1dGVQYWdlUGF0aD0uJTJGcGFnZXMlMkZhcGklMkZ0b3IlMkZwcm94eS50cyZtaWRkbGV3YXJlQ29uZmlnQmFzZTY0PWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDTDtBQUMxRDtBQUNxRDtBQUNyRDtBQUNBLGlFQUFlLHdFQUFLLENBQUMsb0RBQVEsWUFBWSxFQUFDO0FBQzFDO0FBQ08sZUFBZSx3RUFBSyxDQUFDLG9EQUFRO0FBQ3BDO0FBQ08sd0JBQXdCLGdIQUFtQjtBQUNsRDtBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxZQUFZO0FBQ1osQ0FBQzs7QUFFRCIsInNvdXJjZXMiOlsid2VicGFjazovL2NpcmNsZS1hcHAvPzQwYTEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFnZXNBUElSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL3BhZ2VzLWFwaS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBob2lzdCB9IGZyb20gXCJuZXh0L2Rpc3QvYnVpbGQvdGVtcGxhdGVzL2hlbHBlcnNcIjtcbi8vIEltcG9ydCB0aGUgdXNlcmxhbmQgY29kZS5cbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIuL3BhZ2VzL2FwaS90b3IvcHJveHkudHNcIjtcbi8vIFJlLWV4cG9ydCB0aGUgaGFuZGxlciAoc2hvdWxkIGJlIHRoZSBkZWZhdWx0IGV4cG9ydCkuXG5leHBvcnQgZGVmYXVsdCBob2lzdCh1c2VybGFuZCwgXCJkZWZhdWx0XCIpO1xuLy8gUmUtZXhwb3J0IGNvbmZpZy5cbmV4cG9ydCBjb25zdCBjb25maWcgPSBob2lzdCh1c2VybGFuZCwgXCJjb25maWdcIik7XG4vLyBDcmVhdGUgYW5kIGV4cG9ydCB0aGUgcm91dGUgbW9kdWxlIHRoYXQgd2lsbCBiZSBjb25zdW1lZC5cbmV4cG9ydCBjb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBQYWdlc0FQSVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5QQUdFU19BUEksXG4gICAgICAgIHBhZ2U6IFwiL2FwaS90b3IvcHJveHlcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS90b3IvcHJveHlcIixcbiAgICAgICAgLy8gVGhlIGZvbGxvd2luZyBhcmVuJ3QgdXNlZCBpbiBwcm9kdWN0aW9uLlxuICAgICAgICBidW5kbGVQYXRoOiBcIlwiLFxuICAgICAgICBmaWxlbmFtZTogXCJcIlxuICAgIH0sXG4gICAgdXNlcmxhbmRcbn0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYWdlcy1hcGkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Ftor%2Fproxy&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Ftor%2Fproxy.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./pages/api/tor/proxy.ts":
/*!********************************!*\
  !*** ./pages/api/tor/proxy.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var socks_proxy_agent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! socks-proxy-agent */ \"socks-proxy-agent\");\n/* harmony import */ var socks_proxy_agent__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(socks_proxy_agent__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var node_fetch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! node-fetch */ \"node-fetch\");\n/* harmony import */ var node_fetch__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(node_fetch__WEBPACK_IMPORTED_MODULE_1__);\n\n\n// Tor SOCKS proxy configuration\nconst TOR_SOCKS_PORT = 9050;\nconst TOR_SOCKS_HOST = \"127.0.0.1\";\n// Global Tor status\nlet torStatus = {\n    connected: false,\n    circuit: null,\n    latency: 0,\n    error: null\n};\n// Test Tor connection by checking IP\nconst testTorConnection = async ()=>{\n    try {\n        // Create SOCKS proxy agent for Tor\n        const agent = new socks_proxy_agent__WEBPACK_IMPORTED_MODULE_0__.SocksProxyAgent(`socks5://${TOR_SOCKS_HOST}:${TOR_SOCKS_PORT}`);\n        // Test with IP check service\n        const response = await node_fetch__WEBPACK_IMPORTED_MODULE_1___default()(\"https://httpbin.org/ip\", {\n            agent,\n            timeout: 10000 // 10 second timeout\n        });\n        if (!response.ok) {\n            throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n        }\n        const data = await response.json();\n        return {\n            success: true,\n            ip: data.origin\n        };\n    } catch (error) {\n        return {\n            success: false,\n            error: error instanceof Error ? error.message : \"Unknown error\"\n        };\n    }\n};\n// Get current IP without Tor\nconst getRealIP = async ()=>{\n    try {\n        const response = await node_fetch__WEBPACK_IMPORTED_MODULE_1___default()(\"https://httpbin.org/ip\", {\n            timeout: 5000\n        });\n        if (!response.ok) {\n            throw new Error(`HTTP ${response.status}`);\n        }\n        const data = await response.json();\n        return data.origin;\n    } catch (error) {\n        return \"Unknown\";\n    }\n};\nasync function handler(req, res) {\n    if (req.method !== \"POST\") {\n        return res.status(405).json({\n            error: \"Method not allowed\"\n        });\n    }\n    try {\n        const { action, url, method = \"GET\", headers = {}, body } = req.body;\n        switch(action){\n            case \"test_connection\":\n                // Test if Tor is working\n                const testResult = await testTorConnection();\n                const realIP = await getRealIP();\n                if (testResult.success) {\n                    torStatus = {\n                        connected: true,\n                        circuit: {\n                            currentCircuit: [\n                                \"Entry Node\",\n                                \"Middle Node\",\n                                \"Exit Node\"\n                            ],\n                            nodeCount: 3,\n                            socksPort: TOR_SOCKS_PORT\n                        },\n                        latency: 0,\n                        error: null\n                    };\n                    return res.status(200).json({\n                        success: true,\n                        torIP: testResult.ip,\n                        realIP: realIP,\n                        status: torStatus,\n                        message: \"Tor connection successful!\"\n                    });\n                } else {\n                    torStatus = {\n                        connected: false,\n                        circuit: null,\n                        latency: 0,\n                        error: testResult.error || \"Tor connection failed\"\n                    };\n                    return res.status(200).json({\n                        success: false,\n                        realIP: realIP,\n                        status: torStatus,\n                        error: testResult.error || \"Tor connection failed\"\n                    });\n                }\n            case \"new_circuit\":\n                // Simulate new circuit creation\n                const circuitTest = await testTorConnection();\n                if (circuitTest.success) {\n                    torStatus = {\n                        connected: true,\n                        circuit: {\n                            currentCircuit: [\n                                `Entry-${Math.random().toString(36).substr(2, 8)}`,\n                                `Middle-${Math.random().toString(36).substr(2, 8)}`,\n                                `Exit-${Math.random().toString(36).substr(2, 8)}`\n                            ],\n                            nodeCount: 3,\n                            socksPort: TOR_SOCKS_PORT\n                        },\n                        latency: Math.floor(Math.random() * 2000) + 500,\n                        error: null\n                    };\n                    return res.status(200).json({\n                        success: true,\n                        circuit: torStatus.circuit,\n                        latency: torStatus.latency,\n                        message: \"New Tor circuit created\"\n                    });\n                } else {\n                    return res.status(500).json({\n                        success: false,\n                        error: \"Failed to create new circuit\"\n                    });\n                }\n            case \"proxy_request\":\n                // Make request through Tor\n                if (!torStatus.connected) {\n                    return res.status(400).json({\n                        success: false,\n                        error: \"Tor not connected\"\n                    });\n                }\n                try {\n                    const agent = new socks_proxy_agent__WEBPACK_IMPORTED_MODULE_0__.SocksProxyAgent(`socks5://${TOR_SOCKS_HOST}:${TOR_SOCKS_PORT}`);\n                    const response = await node_fetch__WEBPACK_IMPORTED_MODULE_1___default()(url, {\n                        method,\n                        headers,\n                        body: body ? JSON.stringify(body) : undefined,\n                        agent,\n                        timeout: 15000\n                    });\n                    const responseData = await response.text();\n                    return res.status(200).json({\n                        success: true,\n                        status: response.status,\n                        headers: Object.fromEntries(response.headers.entries()),\n                        data: responseData,\n                        message: \"Request made through Tor\"\n                    });\n                } catch (error) {\n                    return res.status(500).json({\n                        success: false,\n                        error: error instanceof Error ? error.message : \"Proxy request failed\"\n                    });\n                }\n            case \"get_status\":\n                // Return current Tor status\n                return res.status(200).json({\n                    success: true,\n                    status: torStatus\n                });\n            default:\n                return res.status(400).json({\n                    success: false,\n                    error: \"Invalid action\"\n                });\n        }\n    } catch (error) {\n        console.error(\"Tor proxy error:\", error);\n        return res.status(500).json({\n            success: false,\n            error: \"Internal server error\",\n            message: error instanceof Error ? error.message : \"Unknown error\"\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/tor/proxy.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Ftor%2Fproxy&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Ftor%2Fproxy.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();